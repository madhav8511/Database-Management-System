
	else{
			// Check if the retrieved values match
			char expected_phone[30];
    		sprintf(expected_phone, "Phone-of-%d", contact_id);
			char expected_name[30];
    		sprintf(expected_name, "Name-of-%d", contact_id);
			if( expected_status == 0 ){
				if (testContact.contact_id == contact_id && 
					strcmp(testContact.contact_name,expected_name) == 0 &&
					strcmp(testContact.phone, expected_phone) == 0){
						TREPORT("PASS", "");
				}
				else{
					sprintf(info,"Contact data not matching... Expected:{%d,%s,%s} Got:{%d,%s,%s}\n",
						contact_id, expected_name, expected_phone, 
						testContact.contact_id, testContact.contact_name, testContact.phone
					);
					TREPORT("FAIL", info);
				}
			}
	else if( !strcmp(command,"NON_NDX_SEARCH") ){
		char phone_num[30], expected_name[30], expected_phone[30];
		int expected_io, actual_io;
		
		if( strcmp(param2,"-1") == 0 )
			expected_status = FAILURE;
		else
			expected_status = SUCCESS;

		sscanf(param1, "%s", phone_num);
		sscanf(param2, "%d", &expected_io);
		testContact.contact_id = -1;
		actual_io = 0;
		status = search_contact_by_phone( phone_num, &testContact, &actual_io );
		if(status == PDS_SUCCESS)
			status = SUCCESS;
		else
			status = FAILURE;
		if( status != expected_status ){
			sprintf(info,"search key: %d; Got status %d",contact_id, status);
			TREPORT("FAIL", info);
		}
		else{
			// Check if the retrieved values match
			// Check if num block accesses match too
			// Extract the expected contact_id from the phone number
			sscanf(phone_num+sizeof("Phone-of"), "%d", &contact_id);
			sprintf(expected_name,"Name-of-%d",contact_id);
			sprintf(expected_phone,"Phone-of-%d",contact_id);
			if( expected_status == 0 ){
				if (testContact.contact_id == contact_id && 
					strcmp(testContact.contact_name, expected_name) == 0 &&
					strcmp(testContact.phone, expected_phone) == 0 ){
						if( expected_io == actual_io ){
							TREPORT("PASS", "");
						}
						else{
							sprintf(info,"Num I/O not matching for contact %d... Expected:%d Got:%d\n",
								contact_id, expected_io, actual_io
							);
							TREPORT("FAIL", info);
						}
				}
				else{
					sprintf(info,"Contact data not matching... Expected:{%d,%s,%s} Got:{%d,%s,%s}\n",
						contact_id, expected_name, expected_phone, 
						testContact.contact_id, testContact.contact_name, testContact.phone
					);
					TREPORT("FAIL", info);
				}
			}
			else
				TREPORT("PASS", "");
		}
	}
	else if( !strcmp(command,"NDX_DELETE") ){
		if( strcmp(param2,"0") == 0 )
			expected_status = SUCCESS;
		else
			expected_status = FAILURE;

		sscanf(param1, "%d", &contact_id);
		testContact.contact_id = -1;
		status = delete_contact( contact_id );
		if( status != expected_status ){
			sprintf(info,"delete key: %d; Got status %d",contact_id, status);
			TREPORT("FAIL", info);
		}
		else{
			TREPORT("PASS", "");
		}
	}